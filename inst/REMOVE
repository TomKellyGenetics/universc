#! /bin/sh

if [[ -z $prefix ]]
    then
    #check for existing install
    if [[ -f inst/.installed ]]
        then
        prefix=$(cat inst/.installed)
        current_version=$(cat .version)
    elif [[ $(which launch_universc.sh) != *"not found" ]]
        then
        prefix=$(which convert)
        current_version=$(launch_universc.sh --version | tail -n 2 | head -n 1 | cut -d" " -f3)
    else
        echo "universc is not installed"
        echo "run the following to install it"
        echo "    make install"
        exit 1
    fi
else
    #check prefix
    if [[ $prefix == *"universc" ]]
        then
        prefix=$(echo $prefix | cut -d'/' -f1-$(($( echo $prefix | grep -o "/" | wc -l))))
        prefix=${prefix}/universc
        current_version=$(cat ${prefix}/.version)
    elif [[ $prefix == *"universc-"* ]]
       then
       prefix=$(echo $prefix | cut -d'/' -f1-$(($( echo $prefix | grep -o "/" | wc -l))))
       prefix=$( ls -d ${prefix}/universc-*/ | head -n 1 )
    else
       prefix=$( ls -d ${prefix}/universc-*/ | head -n 1)
    fi
    #requires full path
    prefix=$(readlink -f $prefix)
    current_version=$(cat ${prefix}/.version)
    if [[ ! -d $prefix ]]
        then
        echo "--prefix $prefix must be a directory"
    fi
    if [[ ! -w $prefix ]]
        then
        echo "--prefix $prefix must be a writeable"
    fi
fi

echo "uninstalling universc ${current_version} from: $prefix"

if [[ ! -w $prefix ]]
    then
    echo "$prefix must be a writeable directory"
    echo "try running:"
    echo "    sudo bash $( cd -P "$( dirname ${BASH_SOURCE[0]})" >/dev/null 2>&1 && pwd )/REMOVE"
    echo "    sudo make remove"
    exit 1
fi


if [[ $prefix == $(pwd) ]] || [[ $prefix == "." ]] || [ $prefix == "../"* ]] || [[ $prefix == "./"* ]]
   then
   echo "Current directory not removed"
else
    echo "Removing install in $prefix"
    #requires root priviledges for some installations
    if [[ -w ${prefix} ]]
        then
        echo "rm -rf $prefix"
    fi
fi

#requires root priviledges if not installed in home directory
if [[ ! -d ${prefix} ]]
    then
    #note does not apply to parent process (only within script for testing version call)
    export PATH=$(echo $PATH | sed -e 's;$INSTALLDIR:;;g')
    #echo "${INSTALLDIR} removed from PATH"
    for SHELL_RC in `ls ~/.*rc`
        do
        sed "/^export PATH=:${INSTALLDIR}:\$PATH$" $SHELL_RC
        echo "universc-${version} will not added to PATH automatically in new ${SHELL} shell session"
    done
    echo "remove the following from ${Home}/.${SHELL}rc to remove it to your shell of choice"
    echo "    export PATH=${INSTALLDIR}:\$PATH >> ~/.\${SHELL}rc"
    echo "To remove convert from your current shell sesssion by running the following:"
    echo " "
    echo "    PATH=\$(echo \$PATH | sed -e 's/;$INSTALLDIR:;;g')"
    echo " "
    echo "convert has been remove from to the $SHELL configuration and will not be automatically loaded"
    echo "run the following to load a fresh environment"
    echo " "
    echo "    source $HOME/.${SHELL}rc"
    echo " "
else
    echo "Directory ${INSTALLDIR} not writeable"
    echo "Warning: installing manual requires root priviledges"
    echo "  Try running of the following:"
    echo "      sudo bash $( cd -P "$( dirname ${BASH_SOURCE[0]})" >/dev/null 2>&1 && pwd )/REMOVE"
    echo "      sudo make remove"
fi

echo "UNINSTALL COMPLETE"
#Note this does not affect the variables in a parent process (interactive shell)
#This must be run there (by the user)
echo source ~/.${SHELL}rc

#remove install file
rm inst/.installed
