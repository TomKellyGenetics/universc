#! /bin/sh

if [[ $VENDOR != "apple" ]]
    then
    SHELL=$(readlink -f /proc/$$/exe | cut -d'/' -f3)
else
    SHELL=$(ps -p $$ | awk '$1 == PP {print $4}' PP=$$)
fi
if [[ $(which launch_universc.sh) != *"not found" ]]
    then
    SHELL=$SHELL
    invocation=$0
else
    if [[ -z $ZSH_VERSION ]]
        then
        SHELL="zsh"
    elif [[ -z $KSH_VERSION ]]
       then
       SHELL="ksh"
    elif [[ -z $FISH_VERSION ]]
       then
       SHELL="fish"
    elif [[ -z $BASH_VERSION ]]
        then
        SHELL="bash"
    else
       SHELL=$SHELL
    fi
    invocation=$(echo $(basename $0))
fi

if [[ $1 == "--prefix" ]]
     then
     prefix=$2
     if [[ ! -d $prefix ]]
        then
        echo "--prefix $prefix must be a directory"
    fi
    if [[ ! -w $prefix ]]
        then
        echo "--prefix $prefix must be a writeable"
    fi
fi
echo $prefix
#default install location (root)
if [[ -z $prefix ]]; then default="true"; prefix="/usr/local/share"; fi
echo $prefix
if [[ $prefix=="\." ]]
    then
    echo "$prefix"
    prefix=`pwd`
fi

if [[ "universc" == $(echo $prefix | rev | cut -d'/' -f1 | rev) ]]
    then
    echo "installing to universc"
    prefix=$(echo $prefix | cut -d'/' -f1-$(($( echo $prefix | grep -o "/" | wc -l))))
    INSTALLDIR=${prefix}/universc
fi
echo $prefix
if [[ ! -w $prefix ]]
    then
    echo "$prefix must be a writeable directory"
    echo "try running:"
    echo "    sudo bash $( cd -P "$( dirname ${BASH_SOURCE[0]})" >/dev/null 2>&1 && pwd )/UPGRADE"
    echo "    sudo make upgrade"
    exit 1
fi

echo "installing to: $prefix"

version=$( cat .version )

#compare versions as numerics
function ver { printf "%03d%03d%03d%03d%03d" $(echo "$1" | tr '.' ' ' | sed 's/\(^\| \)0\([0-9][0-9]*\)/\1\2/g'); }

if [[ -f inst/.installed ]]  || [[ $(which launch_universc.sh) != *"not found" ]]
    then
    current_version=$( launch_universc.sh --version | tail -n 2 | head -n 1 | cut -d' ' -f3 )
    if [[ $((10#$(ver $version))) == $((10#$(ver $current_version))) ]]
        then
        echo "universc ${current_version} is already installed in `which launch_universc.sh`"
        #exit 0${hour#0}
    elif [[ $((10#$(ver $version))) -lt $((10#$(ver $current_version))) ]]
        then
        echo "universc ${current_version} is already installed in `which launch_universc.sh`"
        echo "a newer version of universc is installed"
        echo "run the following to remove it and downgrade to version ${version}"
        echo "    make remove --prefix=$(cat inst/.installed)"
        echo "    make install --prefix=${prefix}"
        exit 1
    elif [[ $((10#$(ver $version))) -gt $((10#$(ver $current_version))) ]]
       then
        echo "universc ${current_version} is already installed in `which launch_universc.sh`"
        echo "Upgrading to universc ${version}"
    fi
fi

if [[ -w $prefix ]]
    then
    $(eval echo $SHELL inst/REMOVE --prefix $prefix)
else
    $(eval echo $SHELL inst/REMOVE)
fi

exit 0
echo $prefix > inst/.installed

echo prefix=$prefix

# create install directory
if [[ -z $INSTALLDIR ]]
    then
    INSTALLDIR="${prefix}/universc-${version}"
fi
echo "Installing to $INSTALLDIR"
mkdir -p ${prefix}/universc-${version}


#requires root priviledges
if [[ -w ${INSTALLDIR} ]]
    then
    rsync -arutvxz * $INSTALLDIR
    #note does not apply to parent process (only within script for testing version call)
    export PATH=$INSTALLDIR:$PATH
    #echo "${INSTALLDIR} added to PATH"
    for SHELL_RC in `ls ~/.*rc`
        do
        echo "export PATH=${INSTALLDIR}:\$PATH" >> $SHELL_RC
        echo "universc-${version} added to PATH automatically in new ${SHELL} shell session"
    done
    echo "run the following to add it to your shell of choice"
    echo "    export PATH=${INSTALLDIR}:\$PATH >> ~/.\${SHELL}rc"
    echo "universc-${version} has been installed it can be run as follows"
    echo "    launch_universc.sh"
    launch_universc.sh --version
    #launch_universc.sh --help
    which launch_universc.sh
    echo "To add convert to your current shell sesssion by running the following:"
    echo " "
    echo "    PATH=${INSTALLDIR}:\$PATH"
    echo " "
    echo "convert has been added to the $SHELL configuration and will be automatically loaded"
    echo "run the following to load a fresh environment"
    echo " "
    echo "    source $HOME/.${SHELL}rc"
    echo " "
else
    echo "Directory ${INSTALLDIR} not writeable"
    echo "Warning: installing manual requires root priviledges"
    echo "  Try running of the following:"
    echo "      sudo bash $( cd -P "$( dirname ${BASH_SOURCE[0]})" >/dev/null 2>&1 && pwd )/INSTALL"
    echo "      sudo make install"
fi

echo "INSTALL COMPLETE"
#Note this does not affect the variables in a parent process (interactive shell)
#This must be run there (by the user)
echo source ~/.${SHELL}rc
